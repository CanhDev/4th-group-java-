/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views.KhachHang;

import Controllers.DonHang.ControllerDonHang;
import view.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Iterator;
import java.util.LinkedHashSet;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import Models.*;
import Controllers.KhachHang.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HI
 */
public class QuanLyKhachHang extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyKhachHang
     */
    private LinkedHashSet<KhachHang> dsKH;
    private DefaultTableModel tblModelKH;
    private ControllerKH controllerKH;
    private LinkedHashSet<DonHang> dsDH = new LinkedHashSet<>();
    private ControllerDonHang controllerDH = new ControllerDonHang();

//    public void fakeData() {
//        try {
//            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
//            dsKH = new LinkedHashSet<>();
//            controllerKH = new ControllerKH();
//            KhachHang khachHang1 = new KhachHang("KH001", "Nguyễn Hoàng Hải", "Hưng Yên", LocalDate.parse("14/09/2003", dateFormatter));
//            dsKH.add(khachHang1);
//            KhachHang khachHang2 = new KhachHang("KH002", "Nguyễn Danisa", "Hưng Yên", LocalDate.parse("05/09/2002", dateFormatter));
//            dsKH.add(khachHang2);
//            KhachHang khachHang3 = new KhachHang("KH003", "Nguyễn Xylitol", "Lạng Sơn", LocalDate.parse("25/10/2004", dateFormatter));
//            dsKH.add(khachHang3);
//            KhachHang khachHang4 = new KhachHang("KH004", "Phan Chanh Muối", "Hà Nội", LocalDate.parse("14/05/2002", dateFormatter));
//            dsKH.add(khachHang4);
//            controllerKH.writeToFile(dsKH, "QLKhachHang.txt");
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, ex.toString(), "CÓ LỖI DỮ LIỆU", JOptionPane.ERROR_MESSAGE);
//        }
//    }
    int dongChon = -1;
    KhachHang khachHang = new KhachHang();
    public void loadTableKhachHang(){
        dsKH = (LinkedHashSet<KhachHang>) controllerKH.readDataFromeFile("QLKhachHang.txt");
        tblKhachHang.setModel(new TableKhachHang(dsKH));
        dsDH = (LinkedHashSet<DonHang>) controllerDH.readDataFromeFile("QLDonHang.txt");
    }
    public QuanLyKhachHang() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        if (dsKH == null) {
            dsKH = new LinkedHashSet<>();
        }
        controllerKH = new ControllerKH();
        tblModelKH = (DefaultTableModel) tblKhachHang.getModel();
        dsDH = (LinkedHashSet<DonHang>) controllerDH.readDataFromeFile("QLDonHang.txt");
        showQuanLyKhachHang();        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbSapXep = new javax.swing.JComboBox<>();
        txtTimKiemKhachHang = new javax.swing.JTextField();
        btnTimKiemKhachHang = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnXemKhachHang = new javax.swing.JButton();
        btnThemKhachHang = new javax.swing.JButton();
        btnSuaKhachHang = new javax.swing.JButton();
        btnXoaKhachHang = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý khách hàng");

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Địa chỉ", "Ngày sinh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);

        jLabel2.setText("Sắp xếp theo");

        cbSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã đơn hàng", "Địa chỉ", "Tên" }));
        cbSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSapXepActionPerformed(evt);
            }
        });

        btnTimKiemKhachHang.setText("Tìm kiếm");
        btnTimKiemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemKhachHangActionPerformed(evt);
            }
        });

        btnXemKhachHang.setText("Xem chi tiết");
        btnXemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemKhachHangActionPerformed(evt);
            }
        });

        btnThemKhachHang.setText("Thêm khách hàng");
        btnThemKhachHang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhachHangActionPerformed(evt);
            }
        });

        btnSuaKhachHang.setText("Sửa");
        btnSuaKhachHang.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                btnSuaKhachHangComponentAdded(evt);
            }
        });
        btnSuaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaKhachHangActionPerformed(evt);
            }
        });

        btnXoaKhachHang.setText("Xóa");
        btnXoaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKhachHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemKhachHang)
                .addGap(272, 272, 272))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btnXemKhachHang)
                .addGap(160, 160, 160)
                .addComponent(btnSuaKhachHang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(btnXoaKhachHang)
                .addGap(63, 63, 63))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(btnThemKhachHang)
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXemKhachHang)
                    .addComponent(btnSuaKhachHang)
                    .addComponent(btnXoaKhachHang))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiemKhachHang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemKhachHang))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public KhachHang getElementAt(int index) {
        Iterator<KhachHang> it = dsKH.iterator();
        int currentIndex = 0;
        while (it.hasNext()) {
            KhachHang khachHang = it.next();
            if (currentIndex == index) {
                return khachHang;
            }
            currentIndex++;
        }
        return null;
    }

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        // TODO add your handling code here:
        dongChon = tblKhachHang.getSelectedRow();
        if (dongChon != -1) {
            khachHang = getElementAt(dongChon);
        }
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnThemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhachHangActionPerformed
        // TODO add your handling code here:
        ThemKhachHang themKhachHang = new ThemKhachHang(this, rootPaneCheckingEnabled);
        themKhachHang.setVisible(true);

    }//GEN-LAST:event_btnThemKhachHangActionPerformed

    private void cbSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSapXepActionPerformed
        int index = cbSapXep.getSelectedIndex();
        if (index == 0) {
            controllerKH.sortByMaKhachHang(dsKH);
        } else if (index == 1) {
            controllerKH.sortByDiaChi(dsKH);
        } else {
            controllerKH.sortByName(dsKH);
        }
        this.showData(dsKH, tblModelKH);
        
    }//GEN-LAST:event_cbSapXepActionPerformed

    private void btnTimKiemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemKhachHangActionPerformed
        String tuKhoa = txtTimKiemKhachHang.getText();
        if (tuKhoa.length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập thông tin tìm kiếm!");
        } else {
            LinkedHashSet<KhachHang> ds = controllerKH.timKiemKhachHang(dsKH, tuKhoa);
            if (ds.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy đơn hàng phù hợp!");
            } else {
                this.showData(ds, tblModelKH);
            }
        }
        
    }//GEN-LAST:event_btnTimKiemKhachHangActionPerformed

    private void btnXemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemKhachHangActionPerformed
        // TODO add your handling code here:
        dongChon = tblKhachHang.getSelectedRow();
        if (dsKH.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin đơn hàng!");
        } else if (dongChon == -1) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn đơn hàng cần xem thông tin!");
        } else {
            XemKhachHang xemKhachHang = new XemKhachHang(this, rootPaneCheckingEnabled);
//            ArrayList<KhachHang> arrKhachHang = new ArrayList<>(dsDH);
            khachHang = getElementAt(dongChon);
            xemKhachHang.setEditData(khachHang);
            xemKhachHang.setVisible(true);
        }
    }//GEN-LAST:event_btnXemKhachHangActionPerformed

    private void btnXoaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKhachHangActionPerformed
        // TODO add your handling code here:
        dongChon = tblKhachHang.getSelectedRow();

        if (dongChon == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn bản ghi cần xóa dữ liệu!");
        } else if (dsKH.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có dữ liệu trong bảng!");
        } else {
            int confirm = JOptionPane.showConfirmDialog(
                    rootPane,
                    "Bạn có chắc chắn muốn xóa?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION
            );
            /*           Người dùng chọn Yes sẽ tiến hành xóa thông tin khỏi danh sách và 
            show lại danh sách sau khi xóa */
            if (confirm == JOptionPane.YES_OPTION) {
                khachHang = getElementAt(dongChon);
                for(DonHang d: dsDH){
                    if(d.getMaKhachHang().equals(khachHang.getMaKhachHang())){
                        dsDH.remove(d);
                        controllerDH.writeToFile(dsDH, "QLDonHang.txt");
                        break;
                    }
                }
                dsKH.remove(khachHang);
                controllerKH.writeToFile(dsKH, "QLKhachHang.txt");
                this.showData(dsKH, tblModelKH);
            }
        }
    }//GEN-LAST:event_btnXoaKhachHangActionPerformed

    private void btnSuaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKhachHangActionPerformed
        // TODO add your handling code here:
        dongChon = tblKhachHang.getSelectedRow();
        if (dongChon == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn bản ghi cần sửa dữ liệu!");
        } else if (dsKH.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để sửa!");
        } else {
            SuaKhachHang suaKhachHang = new SuaKhachHang(this, rootPaneCheckingEnabled);
            khachHang = getElementAt(dongChon);
            suaKhachHang.setEditData(khachHang);
            suaKhachHang.setVisible(true);
        }
    }//GEN-LAST:event_btnSuaKhachHangActionPerformed

    private void btnSuaKhachHangComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_btnSuaKhachHangComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaKhachHangComponentAdded

    public void addKhachHang(KhachHang x) {
        dsKH.add(x);
        showData(dsKH, tblModelKH);
        controllerKH.writeToFile(dsKH, "QLKhachHang.txt");
    }
    
    public void updateKhachHang(KhachHang x) {
        int oldIndex = dongChon;
        khachHang = getElementAt(oldIndex);
        dsKH.remove(khachHang);
        for(DonHang d: dsDH){
                if(d.getMaKhachHang().contains(x.getMaKhachHang())){
                    d.setKhachhang(x);
                    controllerDH.writeToFile(dsDH, "QLDonHang.txt");
                    break;
                }
            }
        dsKH.add(x);
        showData(dsKH, tblModelKH);
        controllerKH.writeToFile(dsKH, "QLKhachHang.txt");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            new QuanLyKhachHang().setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public <T> void showData(LinkedHashSet<KhachHang> ds, DefaultTableModel model) {
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        model.setRowCount(0);
        for (Object t : ds) {
            if (t instanceof KhachHang) {
                KhachHang khachHang = (KhachHang) t;
                tblModelKH.addRow(new Object[]{
                    khachHang.getMaKhachHang(), khachHang.getTenKhachHang(),khachHang.getDiaChi(), khachHang.getNgaySinh().format(dateFormatter)
                });
            }
        }
    }

    private void showQuanLyKhachHang() {
        dsKH = (LinkedHashSet<KhachHang>) controllerKH.readDataFromeFile("QLKhachHang.txt");
        if (dsKH == null) {
            dsKH = new LinkedHashSet<>();
        }
        this.showData(dsKH, tblModelKH);
    }

    public LinkedHashSet<KhachHang> getDSKhachHang() {
        return dsKH;
    }
    public KhachHang timKhachHangTheoMa(String maKhachHang, LinkedHashSet<KhachHang> dsKH) {
        for (KhachHang khachHang : dsKH) {
            if (khachHang.getMaKhachHang().equals(maKhachHang)) {
                return khachHang;
            }
        }
        return null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaKhachHang;
    private javax.swing.JButton btnThemKhachHang;
    private javax.swing.JButton btnTimKiemKhachHang;
    private javax.swing.JButton btnXemKhachHang;
    private javax.swing.JButton btnXoaKhachHang;
    private javax.swing.JComboBox<String> cbSapXep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtTimKiemKhachHang;
    // End of variables declaration//GEN-END:variables

    

}
